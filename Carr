package application;
	
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.collections.ObservableList;
import javafx.stage.Stage;
import javafx.util.Duration;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Polygon;
import javafx.scene.shape.Rectangle;


public class Main extends Application {
	int speed = 1;
	@Override
	public void start(Stage primaryStage) {
		try {
			Pane root = new Pane();
			
			Rectangle rect = new Rectangle(0,180,50,10);
			rect.setFill(Color.RED);
			Polygon poly = new Polygon();
			ObservableList<Double> list = poly.getPoints();
			list.addAll(10.0,180.0,20.0,170.0,30.0,170.0,40.0,180.0);
			poly.setFill(Color.CADETBLUE);
			Circle cl = new Circle(10,187,5);
			Circle cr = new Circle(40,187,5);
			
			
			Timeline anime = new Timeline(new KeyFrame(Duration.millis(19), e -> {
				poly.setLayoutX(poly.getLayoutX() + speed);
				rect.setX(rect.getX() + speed);
				cl.setCenterX(cl.getCenterX() + speed);
				cr.setCenterX(cr.getCenterX() + speed);
				if(rect.getX() > 450){
					poly.setLayoutX(poly.getLayoutX() -499);
					rect.setX(rect.getX() - 499);
					cl.setCenterX(cl.getCenterX() - 499);
					cr.setCenterX(cr.getCenterX() - 499);
				}
				if(rect.getX() < -50){
					poly.setLayoutX(poly.getLayoutX() +499);
					rect.setX(rect.getX() + 499);
					cl.setCenterX(cl.getCenterX() + 499);
					cr.setCenterX(cr.getCenterX() + 499);
				}
				
			}));
			
			
			
			anime.setCycleCount(Timeline.INDEFINITE);
			anime.play();
			
			root.getChildren().addAll(rect,poly,cl, cr);
			Scene scene = new Scene(root,400,400);
			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
			primaryStage.setScene(scene);
			primaryStage.show();
			
			root.requestFocus();
			root.setOnKeyPressed(e -> {
				switch(e.getCode()) {
					case UP:speed++;break;
					case DOWN:speed--;break;
					default: speed = 0; break;
						
				}
				
			});
			
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		launch(args);
	}
}
