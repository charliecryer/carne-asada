package application;
	
import java.util.Arrays;
import java.util.Scanner;

import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;


public class Main extends Application {
	Scanner in = new Scanner(System.in);

	int n = 100;
	int size = 800;
	int[] arr = new int[n];
	GridPane root = new GridPane();
	Rectangle[] rec = new Rectangle[n];
	
	@Override
	public void start(Stage primaryStage) {
		for(int i = 0; i < n; i++){
			arr[i] = (int)(Math.random()*100);
		}
		
		int inn = in.nextInt();
		int num;
		if(inn < 0)
		num = arr[(int)(Math.random()*100)];
		else
			num = inn;
		System.out.println(num);
		Arrays.sort(arr);
		for(int i = 0; i < n; i++){
			StackPane stPane = new StackPane();
			rec[i] = new Rectangle(size/n + 10,size/n + 10);
			rec[i].setFill(Color.AZURE);
			rec[i].setStrokeWidth(3);
			stPane.setMinSize(size/n,size/n);
			stPane.getChildren().addAll(rec[i], new Label("" + arr[i]));
			root.add(stPane,i % 10, i / 10);
			root.add(new Label("" + num), 11, 11);
		}
		
		
		new Thread(() -> {
				
			int l = 0, r = arr.length - 1;
			while (l <= r){
				int m = l + (r-l)/2;
				
				rec[m].setStroke(Color.GOLD);
				
			    if (arr[m] == num){
			    	try { Thread.sleep(500); } catch (InterruptedException ex) {}
			    	rec[m].setStroke(Color.RED);
			    	break;
			    }

			    if (arr[m] < num){
			        l = m + 1;
			        try { Thread.sleep(2000); } catch (InterruptedException ex) {}
			    	for(int i = 0; i < l; i++){
			    		rec[i].setFill(Color.DARKGREY);
			    	}
			    }
			    else{
			    	r = m - 1;
			    	try { Thread.sleep(2000); } catch (InterruptedException ex) {}
			    	for(int i = m; i < arr.length; i++){
			    		rec[i].setFill(Color.DARKGREY);
			    	}
			    }
			 try { Thread.sleep(500); } catch (InterruptedException ex) {}
			 rec[m].setStroke(Color.TRANSPARENT);	
			}
		}).start();
		try {
			Scene scene = new Scene(root,size, size);
			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
			primaryStage.setScene(scene);
			primaryStage.show();
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		launch(args);
	}
}
